// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGamesApi.Api.Home.Data;

namespace VideoGamesApi.Api.Home.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyEntityVideoGameEntity", b =>
                {
                    b.Property<int>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("VideoGamesId")
                        .HasColumnType("int");

                    b.HasKey("CompaniesId", "VideoGamesId");

                    b.HasIndex("VideoGamesId");

                    b.ToTable("CompanyEntityVideoGameEntity");
                });

            modelBuilder.Entity("CountryEntityVideoGameEntity", b =>
                {
                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<int>("VideoGamesId")
                        .HasColumnType("int");

                    b.HasKey("CountriesId", "VideoGamesId");

                    b.HasIndex("VideoGamesId");

                    b.ToTable("CountryEntityVideoGameEntity");
                });

            modelBuilder.Entity("GenreEntityVideoGameEntity", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("VideoGamesId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "VideoGamesId");

                    b.HasIndex("VideoGamesId");

                    b.ToTable("GenreEntityVideoGameEntity");
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.CompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfFoundation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.CountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.VideoGameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfIssue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("CompanyEntityVideoGameEntity", b =>
                {
                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.CompanyEntity", null)
                        .WithMany()
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.VideoGameEntity", null)
                        .WithMany()
                        .HasForeignKey("VideoGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CountryEntityVideoGameEntity", b =>
                {
                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.CountryEntity", null)
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.VideoGameEntity", null)
                        .WithMany()
                        .HasForeignKey("VideoGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreEntityVideoGameEntity", b =>
                {
                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.VideoGameEntity", null)
                        .WithMany()
                        .HasForeignKey("VideoGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.CompanyEntity", b =>
                {
                    b.HasOne("VideoGamesApi.Api.Home.Data.Models.CountryEntity", "Country")
                        .WithMany("Companies")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("VideoGamesApi.Api.Home.Data.Models.CountryEntity", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
